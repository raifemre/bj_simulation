using System;

namespace BlackjackSimulation
{
    class B10MoveStrategy : IPlayerMoveStrategy
    {

        private double[] cardAmounts;
        private double tensAmount;
        private double _dealerUpCardValue, _playerTotalHard, _playerTotalSoft;
        private double playerBelow18vDealer, playerIs18vDealer, playerIs19vDealer, playerIs20vDealer, playerIs21vDealer;
        private bool _hasSplittedHand;
              

        public B10MoveStrategy(double[] cardAmounts)
        {
            this.cardAmounts = cardAmounts;
        }

        public MoveAction Response(Hand hand, Card dealerUpCard, bool hasSplittedHand)
        {
            Setup(hand, dealerUpCard, hasSplittedHand);

            //TODO Soft hand comparations..
            if (false) {    }  //(_playerTotalSoft > 0)

            else
            {
                if (WinChanceWhenStand(_playerTotalHard) > WinChanceWhenHit(_playerTotalHard, false))
                    return MoveAction.Stand;
                else
                {
                    if (WinChanceWhenDoubleDown(_playerTotalHard) > 0.505)
                        return MoveAction.Double;
                    else
                        return MoveAction.Hit;
                }
            }
        }

        private void Setup(Hand hand, Card dealerUpCard, bool hasSplittedHand)
        {
            tensAmount = cardAmounts[10] + cardAmounts[11] + cardAmounts[12] + cardAmounts[13];
            _hasSplittedHand = hasSplittedHand;
            _playerTotalHard = hand.GetValues()[0];
            if (hand.GetValues().Length > 1)
                _playerTotalSoft = hand.GetValues()[1];
            else
                _playerTotalSoft = 0;
            _dealerUpCardValue = dealerUpCard.GetCardValue();

            playerBelow18vDealer = PlayerBelow18vDealer();
            playerIs18vDealer = PlayerIs18vDealer();
            playerIs19vDealer = PlayerIs19vDealer();
            playerIs20vDealer = PlayerIs20vDealer();
            playerIs21vDealer = PlayerIs21vDealer();
        }


        private double WinChanceWhenHit(double playerTotal, bool hasStandChance)
        {
            double probability = 0d;
            for (double cardValue = 1d; cardValue < 11d; cardValue++)
                if (playerTotal + cardValue < 22d)
                    probability += ProbOf((int)cardValue) * WinChanceWhenHit(playerTotal + cardValue, true);

            if (hasStandChance == true) 
                probability += WinChanceWhenStand(playerTotal); 

            return probability;
        }

        private double ProbOf(int card)
        {
            return cardAmounts[card] / cardAmounts[0];
        }

        private double WinChanceWhenStand(double playerTotal)
        {
            if (playerTotal < 18d)
                return playerBelow18vDealer;
            else if (playerTotal == 18d)
                return playerIs18vDealer;
            else if (playerTotal == 19d)
                return playerIs19vDealer;
            else if (playerTotal == 20d)
                return playerIs20vDealer;
            else if (playerTotal == 21d)
                return playerIs21vDealer;
            else
                throw new ArgumentException("Player total > 21 !");
        }

        private double WinChanceWhenDoubleDown(double playerTotal)
        {
            double probability = 0d;

            for (double cardValue = 1d; cardValue < 11d; cardValue++)
                if (playerTotal + cardValue < 22d)
                    probability += ProbOf((int)cardValue) * WinChanceWhenStand(playerTotal + cardValue);

            return probability;
        }

        #region PlayerVDealer

        private double PlayerBelow18vDealer()
        {
            return 1d - (DealerProbOfGoal(17d) + DealerProbOfGoal(18d) + DealerProbOfGoal(19d) + DealerProbOfGoal(20d) + DealerProbOfGoal(21d));
        }

        private double PlayerIs18vDealer()
        {
            return 1d - (DealerProbOfGoal(18d) + DealerProbOfGoal(19d) + DealerProbOfGoal(20d) + DealerProbOfGoal(21d));
        }

        private double PlayerIs19vDealer()
        {
            return 1d - (DealerProbOfGoal(19d) + DealerProbOfGoal(20d) + DealerProbOfGoal(21d));
        }

        private double PlayerIs20vDealer()
        {
            return 1d - (DealerProbOfGoal(20d) + DealerProbOfGoal(21d));
        }

        private double PlayerIs21vDealer()
        {
            return 1d - DealerProbOfGoal(21d);
        }

        #endregion

        //TODO : KONTROL EDİLMELİ.
        #region DealerProbOfGoal
        private double DealerProbOfGoal(double goal)
        {
            #region UpCard : A
            if (_dealerUpCardValue == 1d)
            {
                if (goal == 17d) // A to 17
                    return (cardAmounts[6] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2));
                else if (goal == 18) // A to 18
                    return (cardAmounts[7] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2));
                else if (goal == 19) // A to 19
                    return (cardAmounts[8] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2));
                else if (goal == 20) // A to 20
                    return (cardAmounts[9] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2));
                else if (goal == 21) // A to 21
                    return (tensAmount / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2));
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 2
            else if (_dealerUpCardValue == 2d)
            {
                if (goal == 17)  // 2 to 17
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2));
                else if (goal == 18) // 2 to 18
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2));
                else if (goal == 19) // 2 to 19
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2));
                else if (goal == 20) // 2 to 20
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * ((cardAmounts[9] - 1) / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2));
                else if (goal == 21) // 2 to 21
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[9] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2));
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 3
            else if (_dealerUpCardValue == 3d)
            {
                if (goal == 17) // 3 to 17
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2));
                else if (goal == 18) // 3 to 18
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2));
                else if (goal == 19) // 3 to 19
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2));
                else if (goal == 20) // 3 to 20
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2));
                else if (goal == 21) // 3 to 21
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * ((cardAmounts[9] - 1) / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2));
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 4
            else if (_dealerUpCardValue == 4d)
            {
                if (goal == 17)  // 4 to 17
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2));
                else if (goal == 18) // 4 to 18
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2));
                else if (goal == 19) // 4 to 19
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2));
                else if (goal == 20) // 4 to 20
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2));
                else if (goal == 21) // 4 to 21
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[1] / cardAmounts[0]) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2));
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 5
            else if (_dealerUpCardValue == 5d)
            {
                if (goal == 17) // 5 to 17
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2));
                else if (goal == 18) // 5 to 18
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2));
                else if (goal == 19) // 5 to 19
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2));
                else if (goal == 20) // 5 to 20
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2));
                else if (goal == 21) // 5 to 21
                    return (cardAmounts[1] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * ((cardAmounts[8] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2));
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 6
            else if (_dealerUpCardValue == 6d)
            {
                if (goal == 17) // 6 to 17
                    return (cardAmounts[1] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2)); 
                else if (goal == 18) // 6 to 18
                    return (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)); 
                else if (goal == 19) // 6 to 19
                    return (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)); 
                else if (goal == 20) // 6 to 20
                    return (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)); 
                else if (goal == 21) // 6 to 21
                    return (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (tensAmount / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)); 
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 7
            else if (_dealerUpCardValue == 7d)
            {
                if (goal == 17) // 7 to 17
                    return (tensAmount / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2)); 
                else if (goal == 18) // 7 to 18
                    return (cardAmounts[1] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)); 
                else if (goal == 19) // 7 to 19
                    return (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)); 
                else if (goal == 20) // 7 to 20
                    return (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)); 
                else if (goal == 21) // 7 to 21
                    return (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * ((cardAmounts[7] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[9] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (tensAmount / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)); 
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 8
            else if (_dealerUpCardValue == 8d)
            {
                if (goal == 17) // 8 to 17
                    return (cardAmounts[9] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2)); 
                else if (goal == 18) // 8 to 18
                    return (tensAmount / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)); 
                else if (goal == 19) // 8 to 19
                    return (cardAmounts[1] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)); 
                else if (goal == 20) // 8 to 20
                    return (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)); 
                else if (goal == 21) // 8 to 21
                    return (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[8] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)); 
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 9
            else if (_dealerUpCardValue == 9d)
            {
                if (goal == 17) // 9 to 17
                    return (cardAmounts[8] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2)); 
                else if (goal == 18) // 9 to 18
                    return (cardAmounts[9] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)); 
                else if (goal == 19) // 9 to 19
                    return (tensAmount / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)); 
                else if (goal == 20) // 9 to 20
                    return (cardAmounts[1] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)); 
                else if (goal == 21) // 9 to 21
                    return (cardAmounts[2] / cardAmounts[0]) * (tensAmount / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * ((cardAmounts[6] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[7] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[9] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)); 
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            #region UpCard : 10
            else if (_dealerUpCardValue == 10d)
            {
                if (goal == 17) // 10 to 17
                    return (cardAmounts[7] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[1] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[1] - 1) / (cardAmounts[0] - 2)); 
                else if (goal == 18) // 10 to 18
                    return (cardAmounts[8] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[2] / (cardAmounts[0] - 2)); 
                else if (goal == 19) // 10 to 19
                    return (cardAmounts[9] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * ((cardAmounts[3] - 2) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[3] / (cardAmounts[0] - 2)); 
                else if (goal == 20) // 10 to 20
                    return (tensAmount / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * ((cardAmounts[4] - 1) / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[4] / (cardAmounts[0] - 2)); 
                else if (goal == 21) // 10 to 21
                    return (cardAmounts[1] / cardAmounts[0]) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[9] / (cardAmounts[0] - 1)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[8] / (cardAmounts[0] - 1)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[7] / (cardAmounts[0] - 1)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[6] / (cardAmounts[0] - 1)) + (cardAmounts[6] / cardAmounts[0]) * (cardAmounts[5] / (cardAmounts[0] - 1)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[8] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * ((cardAmounts[2] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[3] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[2] / cardAmounts[0]) * (cardAmounts[4] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[7] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[3] / cardAmounts[0]) * ((cardAmounts[3] - 1) / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * (cardAmounts[6] / (cardAmounts[0] - 2)) + (cardAmounts[4] / cardAmounts[0]) * (cardAmounts[2] / (cardAmounts[0] - 1)) * (cardAmounts[5] / (cardAmounts[0] - 2)) + (cardAmounts[5] / cardAmounts[0]) * (cardAmounts[1] / (cardAmounts[0] - 1)) * ((cardAmounts[5] - 1) / (cardAmounts[0] - 2)); 
                else
                    throw new ArgumentException("Goal has to be in range of [17...21]");
            }
            #endregion

            else
                throw new FormatException("UpCard has to be in range of [A...10]");
        }
        #endregion
    }
}
